;; ;;; packages.el --- synelics-completion Layer packages File for Spacemacs
;; ;;
;; ;; Copyright (c) 2012-2016 Sylvain Benner & Contributors
;; ;;
;; ;; Author: Sylvain Benner <sylvain.benner@gmail.com>
;; ;; URL: https://github.com/syl20bnr/spacemacs
;; ;;
;; ;; This file is not part of GNU Emacs.
;; ;;
;; ;;; License: GPLv3

(setq synelics-javascript-packages
      '(
        js2-mode
        ac-js2
        ;; js2-refactor
        ))

(defun synelics-javascript/init-js2-mode ()
  (use-package js2-mode
    :defer t
    :mode "\\.js\\'"
    :init
    (progn
      (setq-default js2-basic-offset 4)
      (add-hook 'js2-mode-hook 'spacemacs/toggle-spelling-checking-off))
    :config
    (progn
      (spacemacs/declare-prefix-for-mode 'js2-mode "mh" "documentation")
      (spacemacs/declare-prefix-for-mode 'js2-mode "mg" "goto")
      (spacemacs/declare-prefix-for-mode 'js2-mode "mr" "refactor")
      (spacemacs/declare-prefix-for-mode 'js2-mode "mz" "folding")
      (js2-mode-hide-warnings-and-errors)
      (spacemacs/set-leader-keys-for-major-mode 'js2-mode
        "w" 'js2-mode-toggle-warnings-and-errors
        "za" 'js2-mode-show-all
        "zt" 'js2-mode-toggle-element
        "zf" 'js2-mode-toggle-hide-functions
        "zc" 'js2-mode-toggle-hide-comments))))

(defun synelics-javascript/post-init-company ()
  (spacemacs|add-company-hook js2-mode))

(defun synelics-javascript/init-ac-js2 ()
  (use-package ac-js2
    :defer t
    :if (and (configuration-layer/package-usedp 'company)
             (configuration-layer/package-usedp 'ac-js2))
    :init
    (progn
      (add-hook 'js2-mode-hook 'ac-js2-mode)
      (add-hook 'js2-mode-hook
                (lambda ()
                  (add-to-list (make-local-variable 'company-backends) 'ac-js2-company))))
    :config
    (progn
      (defun synelics/js-goto-definition ()
        "Use default first, if failed, then use TAGS."
        (interactive)
        (condition-case nil
            (ac-js2-jump-to-definition)
          (error
           (condition-case nil
               (js2-jump-to-definition)
             (error
              (find-tag))))))

      (add-hook 'ac-js2-mode-hook
                (lambda ()
                  (define-key evil-normal-state-map (kbd "C-i") 'synelics/js-goto-definition))))

      (setq completion-at-point-functions
            (delete 'ac-js2-completion-function completion-at-point-functions)))))
